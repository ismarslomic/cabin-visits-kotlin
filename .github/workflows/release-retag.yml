name: Retag Docker image on Release

on:
  release:
    types: [published]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  retag-image:
    name: Retag Docker image with release version
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure Docker Buildx is available
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Compute release tag
        id: rel
        run: |
          # Use the GitHub release tag name as-is (e.g., v1.2.3)
          echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Retag remote image without rebuild (manifest-level retag)
        run: |
          set -euxo pipefail
          SRC_REF="${IMAGE_NAME}:main"
          DST_REF="${IMAGE_NAME}:${{ steps.rel.outputs.tag }}"
          # Create a new tag pointing to the same manifest as :main without pulling or rebuilding
          docker buildx imagetools create --tag "$DST_REF" "$SRC_REF"

      - name: Show resulting image information
        run: |
          docker buildx imagetools inspect "${IMAGE_NAME}:${{ steps.rel.outputs.tag }}"
